{"ast":null,"code":"import{createClient}from'@supabase/supabase-js';const supabaseUrl=process.env.REACT_APP_SUPABASE_URL;const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY;const supabaseServiceKey=process.env.REACT_APP_SUPABASE_SERVICE_KEY;// DEV-ONLY bypass\nif(!supabaseUrl||!supabaseAnonKey){throw new Error('Missing Supabase environment variables');}// Regular client for normal operations (anon key only)\nexport const supabase=createClient(supabaseUrl,supabaseAnonKey,{auth:{persistSession:true,autoRefreshToken:true,detectSessionInUrl:true}});// DEV-ONLY: optional admin client using service key for local admin dashboard convenience\n// NOTE: This is insecure for production, but acceptable for your local-only setup per instructions.\nexport const supabaseAdmin=supabaseServiceKey?createClient(supabaseUrl,supabaseServiceKey,{auth:{persistSession:false,autoRefreshToken:false}}):null;export const hasAdminBypass=!!supabaseAdmin;/**\n * Admin Create User - Secure Edge Function Wrapper\n */export async function adminCreateUser(_ref){let{email,password,firstName,lastName,role,jobTitle}=_ref;const{data:session}=await supabase.auth.getSession();if(!(session!==null&&session!==void 0&&session.session)){throw new Error('Not authenticated');}const{data,error}=await supabase.functions.invoke('admin-create-user',{body:{email,password,firstName,lastName,role,jobTitle}});if(error)throw error;return data;}/**\n * Admin Delete User - Secure Edge Function Wrapper\n */export async function adminDeleteUser(userId){const{data:session}=await supabase.auth.getSession();if(!(session!==null&&session!==void 0&&session.session)){throw new Error('Not authenticated');}const{data,error}=await supabase.functions.invoke('admin-delete-user',{body:{userId}});if(error)throw error;return data;}/**\n * Create Company with Owner - Secure Edge Function Wrapper\n */export async function createCompanyWithOwner(_ref2){let{companyName,ownerFirstName,ownerLastName,ownerEmail,ownerPhone,tempPassword}=_ref2;const{data,error}=await supabase.functions.invoke('create-company-with-owner',{body:{companyName,ownerFirstName,ownerLastName,ownerEmail,ownerPhone,tempPassword}});if(error)throw error;return data;}console.log('✅ Supabase client initialized');console.log('📍 URL:',supabaseUrl);console.log(hasAdminBypass?'🔓 DEV ADMIN BYPASS ENABLED (service key present)':'🔒 Admin operations routed through Edge Functions');/**\n * Admin List Users - Secure Edge Function Wrapper\n */export async function adminListUsers(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{data:session}=await supabase.auth.getSession();if(!(session!==null&&session!==void 0&&session.session)){throw new Error('Not authenticated');}const{data,error}=await supabase.functions.invoke('admin-list-users',{body:params});if(error)throw error;return data;}/**\n * DEV-ONLY: Admin List Users using local service key bypass (no Edge Function needed)\n */export async function adminListUsersLocal(){var _params$limit,_params$search;let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(!supabaseAdmin)throw new Error('Admin bypass not configured');const limit=Math.min(Math.max(parseInt(String((_params$limit=params.limit)!==null&&_params$limit!==void 0?_params$limit:200)),1),1000);const search=((_params$search=params.search)!==null&&_params$search!==void 0?_params$search:'').trim();let usersQuery=supabaseAdmin.from('users').select('id, email, role, status, created_at, company_id').order('created_at',{ascending:false}).limit(limit);if(search){usersQuery=usersQuery.or(\"email.ilike.%\".concat(search,\"%\"));}const{data:users,error:usersErr}=await usersQuery;if(usersErr)throw usersErr;const userIds=users.map(u=>u.id);const companyIds=[...new Set(users.map(u=>u.company_id).filter(Boolean))];const[profilesRes,companiesRes]=await Promise.all([userIds.length?supabaseAdmin.from('profiles').select('id, first_name, last_name, phone').in('id',userIds):Promise.resolve({data:[]}),companyIds.length?supabaseAdmin.from('companies').select('id, name').in('id',companyIds):Promise.resolve({data:[]})]);const profiles=profilesRes.data||[];const companies=companiesRes.data||[];const profileMap={};profiles.forEach(p=>{profileMap[p.id]=p;});const companyMap={};companies.forEach(c=>{companyMap[c.id]=c;});const result=users.map(u=>{const p=profileMap[u.id]||{};const c=companyMap[u.company_id]||null;const display_name=[p.first_name,p.last_name].filter(Boolean).join(' ').trim();return{id:u.id,email:u.email,role:u.role,status:u.status,created_at:u.created_at,company_id:u.company_id,company:c?{id:c.id,name:c.name}:null,display_name,phone:p.phone||null};});return{users:result};}","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabaseServiceKey","REACT_APP_SUPABASE_SERVICE_KEY","Error","supabase","auth","persistSession","autoRefreshToken","detectSessionInUrl","supabaseAdmin","hasAdminBypass","adminCreateUser","_ref","email","password","firstName","lastName","role","jobTitle","data","session","getSession","error","functions","invoke","body","adminDeleteUser","userId","createCompanyWithOwner","_ref2","companyName","ownerFirstName","ownerLastName","ownerEmail","ownerPhone","tempPassword","console","log","adminListUsers","params","arguments","length","undefined","adminListUsersLocal","_params$limit","_params$search","limit","Math","min","max","parseInt","String","search","trim","usersQuery","from","select","order","ascending","or","concat","users","usersErr","userIds","map","u","id","companyIds","Set","company_id","filter","Boolean","profilesRes","companiesRes","Promise","all","in","resolve","profiles","companies","profileMap","forEach","p","companyMap","c","result","display_name","first_name","last_name","join","status","created_at","company","name","phone"],"sources":["D:/TradeMate Pro Webapp/admin-dashboard/src/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nconst supabaseServiceKey = process.env.REACT_APP_SUPABASE_SERVICE_KEY; // DEV-ONLY bypass\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\n\n// Regular client for normal operations (anon key only)\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n    detectSessionInUrl: true\n  }\n});\n\n// DEV-ONLY: optional admin client using service key for local admin dashboard convenience\n// NOTE: This is insecure for production, but acceptable for your local-only setup per instructions.\nexport const supabaseAdmin = supabaseServiceKey\n  ? createClient(supabaseUrl, supabaseServiceKey, {\n      auth: { persistSession: false, autoRefreshToken: false }\n    })\n  : null;\n\nexport const hasAdminBypass = !!supabaseAdmin;\n\n/**\n * Admin Create User - Secure Edge Function Wrapper\n */\nexport async function adminCreateUser({ email, password, firstName, lastName, role, jobTitle }) {\n  const { data: session } = await supabase.auth.getSession();\n  if (!session?.session) {\n    throw new Error('Not authenticated');\n  }\n\n  const { data, error } = await supabase.functions.invoke('admin-create-user', {\n    body: { email, password, firstName, lastName, role, jobTitle }\n  });\n\n  if (error) throw error;\n  return data;\n}\n\n/**\n * Admin Delete User - Secure Edge Function Wrapper\n */\nexport async function adminDeleteUser(userId) {\n  const { data: session } = await supabase.auth.getSession();\n  if (!session?.session) {\n    throw new Error('Not authenticated');\n  }\n\n  const { data, error } = await supabase.functions.invoke('admin-delete-user', {\n    body: { userId }\n  });\n\n  if (error) throw error;\n  return data;\n}\n\n/**\n * Create Company with Owner - Secure Edge Function Wrapper\n */\nexport async function createCompanyWithOwner({ companyName, ownerFirstName, ownerLastName, ownerEmail, ownerPhone, tempPassword }) {\n  const { data, error } = await supabase.functions.invoke('create-company-with-owner', {\n    body: { companyName, ownerFirstName, ownerLastName, ownerEmail, ownerPhone, tempPassword }\n  });\n\n  if (error) throw error;\n  return data;\n}\n\nconsole.log('✅ Supabase client initialized');\nconsole.log('📍 URL:', supabaseUrl);\nconsole.log(hasAdminBypass\n  ? '🔓 DEV ADMIN BYPASS ENABLED (service key present)'\n  : '🔒 Admin operations routed through Edge Functions');\n\n/**\n * Admin List Users - Secure Edge Function Wrapper\n */\nexport async function adminListUsers(params = {}) {\n  const { data: session } = await supabase.auth.getSession();\n  if (!session?.session) {\n    throw new Error('Not authenticated');\n  }\n  const { data, error } = await supabase.functions.invoke('admin-list-users', {\n    body: params\n  });\n  if (error) throw error;\n  return data;\n}\n\n/**\n * DEV-ONLY: Admin List Users using local service key bypass (no Edge Function needed)\n */\nexport async function adminListUsersLocal(params = {}) {\n  if (!supabaseAdmin) throw new Error('Admin bypass not configured');\n  const limit = Math.min(Math.max(parseInt(String(params.limit ?? 200)), 1), 1000);\n  const search = (params.search ?? '').trim();\n\n  let usersQuery = supabaseAdmin\n    .from('users')\n    .select('id, email, role, status, created_at, company_id')\n    .order('created_at', { ascending: false })\n    .limit(limit);\n\n  if (search) {\n    usersQuery = usersQuery.or(`email.ilike.%${search}%`);\n  }\n\n  const { data: users, error: usersErr } = await usersQuery;\n  if (usersErr) throw usersErr;\n\n  const userIds = users.map(u => u.id);\n  const companyIds = [...new Set(users.map(u => u.company_id).filter(Boolean))];\n\n  const [profilesRes, companiesRes] = await Promise.all([\n    userIds.length\n      ? supabaseAdmin.from('profiles').select('id, first_name, last_name, phone').in('id', userIds)\n      : Promise.resolve({ data: [] }),\n    companyIds.length\n      ? supabaseAdmin.from('companies').select('id, name').in('id', companyIds)\n      : Promise.resolve({ data: [] })\n  ]);\n\n  const profiles = profilesRes.data || [];\n  const companies = companiesRes.data || [];\n\n  const profileMap = {};\n  profiles.forEach(p => { profileMap[p.id] = p; });\n\n  const companyMap = {};\n  companies.forEach(c => { companyMap[c.id] = c; });\n\n  const result = users.map(u => {\n    const p = profileMap[u.id] || {};\n    const c = companyMap[u.company_id] || null;\n    const display_name = [p.first_name, p.last_name].filter(Boolean).join(' ').trim();\n    return {\n      id: u.id,\n      email: u.email,\n      role: u.role,\n      status: u.status,\n      created_at: u.created_at,\n      company_id: u.company_id,\n      company: c ? { id: c.id, name: c.name } : null,\n      display_name,\n      phone: p.phone || null,\n    };\n  });\n\n  return { users: result };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}