{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nconst supabaseServiceKey = process.env.REACT_APP_SUPABASE_SERVICE_KEY;\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\n\n// SECURITY: Only use anon key in browser - service key operations moved to Edge Functions\nif (supabaseServiceKey) {\n  console.warn('‚ö†Ô∏è SECURITY WARNING: REACT_APP_SUPABASE_SERVICE_KEY detected in browser environment!');\n  console.warn('‚ö†Ô∏è Service key should NEVER be in browser code. Remove from .env and use Edge Functions.');\n}\n\n// Regular client for normal operations (anon key only)\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n    detectSessionInUrl: true\n  }\n});\n\n/**\n * Admin Create User - Secure Edge Function Wrapper\n * Replaces direct service key usage for user creation\n */\nexport async function adminCreateUser({\n  email,\n  password,\n  firstName,\n  lastName,\n  role,\n  jobTitle\n}) {\n  const {\n    data: session\n  } = await supabase.auth.getSession();\n  if (!(session !== null && session !== void 0 && session.session)) {\n    throw new Error('Not authenticated');\n  }\n  const {\n    data,\n    error\n  } = await supabase.functions.invoke('admin-create-user', {\n    body: {\n      email,\n      password,\n      firstName,\n      lastName,\n      role,\n      jobTitle\n    }\n  });\n  if (error) throw error;\n  return data;\n}\n\n/**\n * Admin Delete User - Secure Edge Function Wrapper\n * Replaces direct service key usage for user deletion\n */\nexport async function adminDeleteUser(userId) {\n  const {\n    data: session\n  } = await supabase.auth.getSession();\n  if (!(session !== null && session !== void 0 && session.session)) {\n    throw new Error('Not authenticated');\n  }\n  const {\n    data,\n    error\n  } = await supabase.functions.invoke('admin-delete-user', {\n    body: {\n      userId\n    }\n  });\n  if (error) throw error;\n  return data;\n}\n\n/**\n * Create Company with Owner - Secure Edge Function Wrapper\n * Replaces direct service key usage for company creation\n */\nexport async function createCompanyWithOwner({\n  companyName,\n  ownerFirstName,\n  ownerLastName,\n  ownerEmail,\n  ownerPhone,\n  tempPassword\n}) {\n  const {\n    data,\n    error\n  } = await supabase.functions.invoke('create-company-with-owner', {\n    body: {\n      companyName,\n      ownerFirstName,\n      ownerLastName,\n      ownerEmail,\n      ownerPhone,\n      tempPassword\n    }\n  });\n  if (error) throw error;\n  return data;\n}\nconsole.log('‚úÖ Supabase client initialized (anon key only - secure)');\nconsole.log('üìç URL:', supabaseUrl);\nconsole.log('üîí Admin operations routed through Edge Functions');","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabaseServiceKey","REACT_APP_SUPABASE_SERVICE_KEY","Error","console","warn","supabase","auth","persistSession","autoRefreshToken","detectSessionInUrl","adminCreateUser","email","password","firstName","lastName","role","jobTitle","data","session","getSession","error","functions","invoke","body","adminDeleteUser","userId","createCompanyWithOwner","companyName","ownerFirstName","ownerLastName","ownerEmail","ownerPhone","tempPassword","log"],"sources":["D:/TradeMate Pro Webapp/admin-dashboard/src/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nconst supabaseServiceKey = process.env.REACT_APP_SUPABASE_SERVICE_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\n\n// SECURITY: Only use anon key in browser - service key operations moved to Edge Functions\nif (supabaseServiceKey) {\n  console.warn('‚ö†Ô∏è SECURITY WARNING: REACT_APP_SUPABASE_SERVICE_KEY detected in browser environment!');\n  console.warn('‚ö†Ô∏è Service key should NEVER be in browser code. Remove from .env and use Edge Functions.');\n}\n\n// Regular client for normal operations (anon key only)\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n    detectSessionInUrl: true\n  }\n});\n\n/**\n * Admin Create User - Secure Edge Function Wrapper\n * Replaces direct service key usage for user creation\n */\nexport async function adminCreateUser({ email, password, firstName, lastName, role, jobTitle }) {\n  const { data: session } = await supabase.auth.getSession();\n  if (!session?.session) {\n    throw new Error('Not authenticated');\n  }\n\n  const { data, error } = await supabase.functions.invoke('admin-create-user', {\n    body: { email, password, firstName, lastName, role, jobTitle }\n  });\n\n  if (error) throw error;\n  return data;\n}\n\n/**\n * Admin Delete User - Secure Edge Function Wrapper\n * Replaces direct service key usage for user deletion\n */\nexport async function adminDeleteUser(userId) {\n  const { data: session } = await supabase.auth.getSession();\n  if (!session?.session) {\n    throw new Error('Not authenticated');\n  }\n\n  const { data, error } = await supabase.functions.invoke('admin-delete-user', {\n    body: { userId }\n  });\n\n  if (error) throw error;\n  return data;\n}\n\n/**\n * Create Company with Owner - Secure Edge Function Wrapper\n * Replaces direct service key usage for company creation\n */\nexport async function createCompanyWithOwner({ companyName, ownerFirstName, ownerLastName, ownerEmail, ownerPhone, tempPassword }) {\n  const { data, error } = await supabase.functions.invoke('create-company-with-owner', {\n    body: { companyName, ownerFirstName, ownerLastName, ownerEmail, ownerPhone, tempPassword }\n  });\n\n  if (error) throw error;\n  return data;\n}\n\nconsole.log('‚úÖ Supabase client initialized (anon key only - secure)');\nconsole.log('üìç URL:', supabaseUrl);\nconsole.log('üîí Admin operations routed through Edge Functions');\n\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;AAC/D,MAAMC,kBAAkB,GAAGL,OAAO,CAACC,GAAG,CAACK,8BAA8B;AAErE,IAAI,CAACP,WAAW,IAAI,CAACI,eAAe,EAAE;EACpC,MAAM,IAAII,KAAK,CAAC,wCAAwC,CAAC;AAC3D;;AAEA;AACA,IAAIF,kBAAkB,EAAE;EACtBG,OAAO,CAACC,IAAI,CAAC,sFAAsF,CAAC;EACpGD,OAAO,CAACC,IAAI,CAAC,0FAA0F,CAAC;AAC1G;;AAEA;AACA,OAAO,MAAMC,QAAQ,GAAGZ,YAAY,CAACC,WAAW,EAAEI,eAAe,EAAE;EACjEQ,IAAI,EAAE;IACJC,cAAc,EAAE,IAAI;IACpBC,gBAAgB,EAAE,IAAI;IACtBC,kBAAkB,EAAE;EACtB;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,OAAO,eAAeC,eAAeA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAC9F,MAAM;IAAEC,IAAI,EAAEC;EAAQ,CAAC,GAAG,MAAMb,QAAQ,CAACC,IAAI,CAACa,UAAU,CAAC,CAAC;EAC1D,IAAI,EAACD,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEA,OAAO,GAAE;IACrB,MAAM,IAAIhB,KAAK,CAAC,mBAAmB,CAAC;EACtC;EAEA,MAAM;IAAEe,IAAI;IAAEG;EAAM,CAAC,GAAG,MAAMf,QAAQ,CAACgB,SAAS,CAACC,MAAM,CAAC,mBAAmB,EAAE;IAC3EC,IAAI,EAAE;MAAEZ,KAAK;MAAEC,QAAQ;MAAEC,SAAS;MAAEC,QAAQ;MAAEC,IAAI;MAAEC;IAAS;EAC/D,CAAC,CAAC;EAEF,IAAII,KAAK,EAAE,MAAMA,KAAK;EACtB,OAAOH,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA,OAAO,eAAeO,eAAeA,CAACC,MAAM,EAAE;EAC5C,MAAM;IAAER,IAAI,EAAEC;EAAQ,CAAC,GAAG,MAAMb,QAAQ,CAACC,IAAI,CAACa,UAAU,CAAC,CAAC;EAC1D,IAAI,EAACD,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEA,OAAO,GAAE;IACrB,MAAM,IAAIhB,KAAK,CAAC,mBAAmB,CAAC;EACtC;EAEA,MAAM;IAAEe,IAAI;IAAEG;EAAM,CAAC,GAAG,MAAMf,QAAQ,CAACgB,SAAS,CAACC,MAAM,CAAC,mBAAmB,EAAE;IAC3EC,IAAI,EAAE;MAAEE;IAAO;EACjB,CAAC,CAAC;EAEF,IAAIL,KAAK,EAAE,MAAMA,KAAK;EACtB,OAAOH,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA,OAAO,eAAeS,sBAAsBA,CAAC;EAAEC,WAAW;EAAEC,cAAc;EAAEC,aAAa;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAa,CAAC,EAAE;EACjI,MAAM;IAAEf,IAAI;IAAEG;EAAM,CAAC,GAAG,MAAMf,QAAQ,CAACgB,SAAS,CAACC,MAAM,CAAC,2BAA2B,EAAE;IACnFC,IAAI,EAAE;MAAEI,WAAW;MAAEC,cAAc;MAAEC,aAAa;MAAEC,UAAU;MAAEC,UAAU;MAAEC;IAAa;EAC3F,CAAC,CAAC;EAEF,IAAIZ,KAAK,EAAE,MAAMA,KAAK;EACtB,OAAOH,IAAI;AACb;AAEAd,OAAO,CAAC8B,GAAG,CAAC,wDAAwD,CAAC;AACrE9B,OAAO,CAAC8B,GAAG,CAAC,SAAS,EAAEvC,WAAW,CAAC;AACnCS,OAAO,CAAC8B,GAAG,CAAC,mDAAmD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}